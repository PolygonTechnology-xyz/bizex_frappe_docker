services:
  backend:
    image: ${IMAGE_NAME}
    container_name: ${PROJECT_NAME}_backend
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: on-failure
    volumes:
      - hdc_sites:/home/frappe/frappe-bench/sites
      - hdc_logs:/home/frappe/frappe-bench/logs
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  configurator:
    image: ${IMAGE_NAME}
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: "no"
    entrypoint: ["bash", "-c"]
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      REDIS_CACHE: redis-cache:6379
      REDIS_QUEUE: redis-queue:6379
      SOCKETIO_PORT: "9000"
    volumes:
      - hdc_sites:/home/frappe/frappe-bench/sites
      - hdc_logs:/home/frappe/frappe-bench/logs

  create-site:
    image: ${IMAGE_NAME}
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: "no"
    entrypoint: ["bash", "-c"]
    command:
      - >
        wait-for-it -t 120 db:3306;
        wait-for-it -t 120 redis-cache:6379;
        wait-for-it -t 120 redis-queue:6379;
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] &&
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] &&
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done;
        echo "sites/common_site_config.json found";
        bench new-site ${SITE_NAME} --mariadb-user-host-login-scope='%' --admin-password=${ADMIN_PASSWORD} --db-root-username=root --db-root-password=${MYSQL_ROOT_PASSWORD};
        for app in ${INSTALL_APPS}; do bench --site ${SITE_NAME} install-app $$app; done;
        bench use ${SITE_NAME};
        bench --site ${SITE_NAME} migrate;
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      REDIS_CACHE: redis-cache:6379
      REDIS_QUEUE: redis-queue:6379
      SOCKETIO_PORT: "9000"
    volumes:
      - hdc_sites:/home/frappe/frappe-bench/sites
      - hdc_logs:/home/frappe/frappe-bench/logs

  db:
    image: mariadb:10.6
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: on-failure
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - hdc_db-data:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "--password=${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 1s
      retries: 20

  frontend:
    image: ${IMAGE_NAME}
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    depends_on:
      - websocket
    restart: on-failure
    command: ["nginx-entrypoint.sh"]
    environment:
      BACKEND: backend:8000
      FRAPPE_SITE_NAME_HEADER: ${SITE_NAME}
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    volumes:
      - hdc_sites:/home/frappe/frappe-bench/sites
      - hdc_logs:/home/frappe/frappe-bench/logs
    ports:
      - "${FRONTEND_PORT}:8080"

  queue-long:
    image: ${IMAGE_NAME}
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: on-failure
    command: ["bench", "worker", "--queue", "long,default,short"]
    volumes:
      - hdc_sites:/home/frappe/frappe-bench/sites
      - hdc_logs:/home/frappe/frappe-bench/logs

  queue-short:
    image: ${IMAGE_NAME}
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: on-failure
    command: ["bench", "worker", "--queue", "short,default"]
    volumes:
      - hdc_sites:/home/frappe/frappe-bench/sites
      - hdc_logs:/home/frappe/frappe-bench/logs

  redis-queue:
    image: redis:6.2-alpine
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: on-failure
    volumes:
      - hdc_redis-queue-data:/data

  redis-cache:
    image: redis:6.2-alpine
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: on-failure

  scheduler:
    image: ${IMAGE_NAME}
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: on-failure
    command: ["bench", "schedule"]
    volumes:
      - hdc_sites:/home/frappe/frappe-bench/sites
      - hdc_logs:/home/frappe/frappe-bench/logs

  websocket:
    image: ${IMAGE_NAME}
    platform: linux/amd64
    networks:
      - frappe_network_hdc
    restart: on-failure
    command: ["node", "/home/frappe/frappe-bench/apps/frappe/socketio.js"]
    volumes:
      - hdc_sites:/home/frappe/frappe-bench/sites
      - hdc_logs:/home/frappe/frappe-bench/logs

volumes:
  hdc_db-data:
  hdc_redis-queue-data:
  hdc_sites:
  hdc_logs:

networks:
  frappe_network_hdc:
    driver: bridge
